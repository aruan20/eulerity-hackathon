{"ast":null,"code":"var _jsxFileName = \"/Users/amandaruan/Documents/Projects/eulerity-hackathon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n`;\n_c = Container;\nconst SideBar = styled.div`\n  // width: 25%;\n  float: left;\n`;\n_c2 = SideBar;\nconst Selections = styled.ul`\n  list-style: none;\n`;\n_c3 = Selections;\nconst List = styled.ul`\n  width: 75%;\n  float: right;\n  list-style: none;\n  flex-wrap: wrap;\n  display: flex;\n  height: 100vh;\n  overflow: auto;\n  `;\n_c4 = List;\nconst ListItem = styled.li`\n  flex: 1 1 30%;\n  // display: inline-block;\n  border: solid;\n  border-color: white;\n  border-radius: 25px;\n  padding: 5px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\n/*\n  Function: isPet()\n  Parameters: 1 argument (unspecified type)\n  Purpose: check if argument is a \"Pet\" object\n  Return: true if argument is a Pet, false otherwise\n*/\n_c5 = ListItem;\nexport function isPet(value) {\n  // check if there is no info (value = false) or if info can be accessed\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n  const obj = value;\n  return typeof obj.title === 'string' && typeof obj.description === 'string' && typeof obj.url === 'string' && typeof obj.created === 'string';\n}\n\n/*\n  Function: isPetsArray()\n  Parameters: 1 argument (unspecified array)\n  Purpose: check if array is an array of \"Pet\" objects\n  Return: true if argument is a Pet[], false otherwise\n*/\nexport function isPetsArray(value) {\n  return Array.isArray(value) && value.every(isPet);\n}\n\n/*\n  Function: getPets()\n  Parameters: none\n  Purpose: retrieve information from JSON file\n  Return: Pet[]\n*/\nexport async function getPets() {\n  // get data using fetch (set to \"GET\" method by default)\n  const request = await fetch('https://eulerity-hackathon.appspot.com/pets');\n  const data = await request.json();\n\n  // check if data consists of Pet objects\n  if (!isPetsArray(data)) {\n    throw new Error('Invalid data: array with pets expected');\n  }\n  return data;\n}\nfunction App() {\n  _s();\n  const [pets, setPets] = useState([]);\n  const [selectedPets, setSelectedPets] = useState([]);\n  useEffect(() => {\n    getPets().then(result => setPets(result));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {\n          children: [\"Selections\", /*#__PURE__*/_jsxDEV(Selections, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: pets.map((pet, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => {\n              if (selectedPets.includes(pet)) {\n                setSelectedPets(selectedPets.filter(a => a.title !== pet.title));\n              } else {\n                setSelectedPets([...selectedPets, pet]);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: pet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pet.url,\n              alt: \"image of pet\",\n              height: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: pet.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: pet.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JjfpGFq7czaGA8jPh0EkDpl9UJ8=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SideBar\");\n$RefreshReg$(_c3, \"Selections\");\n$RefreshReg$(_c4, \"List\");\n$RefreshReg$(_c5, \"ListItem\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","logo","useState","useEffect","styled","jsxDEV","_jsxDEV","Container","div","_c","SideBar","_c2","Selections","ul","_c3","List","_c4","ListItem","li","_c5","isPet","value","obj","title","description","url","created","isPetsArray","Array","isArray","every","getPets","request","fetch","data","json","Error","App","_s","pets","setPets","selectedPets","setSelectedPets","then","result","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","map","pet","index","onClick","includes","filter","a","height","_c6","$RefreshReg$"],"sources":["/Users/amandaruan/Documents/Projects/eulerity-hackathon/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport type {Pet} from './Pet';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n`\nconst SideBar = styled.div`\n  // width: 25%;\n  float: left;\n`\n\nconst Selections = styled.ul`\n  list-style: none;\n`\n\nconst List = styled.ul`\n  width: 75%;\n  float: right;\n  list-style: none;\n  flex-wrap: wrap;\n  display: flex;\n  height: 100vh;\n  overflow: auto;\n  `\nconst ListItem = styled.li`\n  flex: 1 1 30%;\n  // display: inline-block;\n  border: solid;\n  border-color: white;\n  border-radius: 25px;\n  padding: 5px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n`\n\n/*\n  Function: isPet()\n  Parameters: 1 argument (unspecified type)\n  Purpose: check if argument is a \"Pet\" object\n  Return: true if argument is a Pet, false otherwise\n*/\nexport function isPet(value: unknown):value is Pet{\n  // check if there is no info (value = false) or if info can be accessed\n  if (!value || typeof value !== 'object'){\n    return false\n  }\n  const obj = value as Record<string, unknown>\n  return (\n    typeof obj.title === 'string' &&\n    typeof obj.description === 'string' &&\n    typeof obj.url === 'string' &&\n    typeof obj.created === 'string'\n  )\n}\n\n/*\n  Function: isPetsArray()\n  Parameters: 1 argument (unspecified array)\n  Purpose: check if array is an array of \"Pet\" objects\n  Return: true if argument is a Pet[], false otherwise\n*/\nexport function isPetsArray(value: unknown):value is Pet[]{\n  return Array.isArray(value) && value.every(isPet)\n}\n\n/*\n  Function: getPets()\n  Parameters: none\n  Purpose: retrieve information from JSON file\n  Return: Pet[]\n*/\nexport async function getPets(){\n  // get data using fetch (set to \"GET\" method by default)\n  const request = await fetch('https://eulerity-hackathon.appspot.com/pets')\n  const data = await request.json()\n\n  // check if data consists of Pet objects\n  if (!isPetsArray(data)){\n    throw new Error('Invalid data: array with pets expected')\n  }\n\n  return data\n}\n\n\n\n\nfunction App() {\n  \n  const [pets, setPets] = useState<Pet[]>([]);\n  const [selectedPets, setSelectedPets] = useState<Pet[]>([])\n  useEffect(() => {\n      getPets().then(result =>\n        setPets(result)\n      );\n  }, []);\n  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <Container>\n          <SideBar>\n            Selections\n            <Selections></Selections>\n          </SideBar>\n          <List>\n            {pets.map((pet, index) => \n              <ListItem key={index} onClick={() => {\n                if (selectedPets.includes(pet)){\n                  setSelectedPets(selectedPets.filter(a => a.title !== pet.title))\n                }\n                else{\n                  setSelectedPets([...selectedPets, pet])\n                }\n              }}>\n                <h3>{pet.title}</h3>\n                <img src={pet.url} alt=\"image of pet\" height=\"200px\"/>\n                <p>{pet.description}</p>\n                <h6>{pet.created}</h6>\n              </ListItem>\n            )}\n          </List>\n        </Container>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/amandaruan/Documents/Projects/eulerity-hackathon/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItem = styled.li`\n  display: inline\n`;\n\n/*\n  Function: isPet()\n  Parameters: 1 argument (unspecified type)\n  Purpose: check if argument is a \"Pet\" object\n  Return: true if argument is a Pet, false otherwise\n*/\n_c = ListItem;\nexport function isPet(value) {\n  // check if there is no info (value = false) or if info can be accessed\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n  const obj = value;\n  return typeof obj.title === 'string' && typeof obj.description === 'string' && typeof obj.url === 'string' && typeof obj.created === 'string';\n}\n\n/*\n  Function: isPetsArray()\n  Parameters: 1 argument (unspecified array)\n  Purpose: check if array is an array of \"Pet\" objects\n  Return: true if argument is a Pet[], false otherwise\n*/\nexport function isPetsArray(value) {\n  return Array.isArray(value) && value.every(isPet);\n}\n\n/*\n  Function: getPets()\n  Parameters: none\n  Purpose: retrieve information from JSON file\n  Return: Pet[]\n*/\nexport async function getPets() {\n  // get data using fetch (set to \"GET\" method by default)\n  const request = await fetch('https://eulerity-hackathon.appspot.com/pets');\n  const data = await request.json();\n\n  // check if data consists of Pet objects\n  if (!isPetsArray(data)) {\n    throw new Error('Invalid data: array with pets expected');\n  }\n  return data;\n}\nfunction App() {\n  _s();\n  const [pets, setPets] = useState([]);\n  useEffect(() => {\n    getPets().then(result => setPets(result));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pets.map((pet, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: pet.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ListItem\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","logo","useState","useEffect","styled","jsxDEV","_jsxDEV","ListItem","li","_c","isPet","value","obj","title","description","url","created","isPetsArray","Array","isArray","every","getPets","request","fetch","data","json","Error","App","_s","pets","setPets","then","result","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","map","pet","index","_c2","$RefreshReg$"],"sources":["/Users/amandaruan/Documents/Projects/eulerity-hackathon/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport type {Pet} from './Pet';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nconst ListItem = styled.li`\n  display: inline\n`\n\n\n/*\n  Function: isPet()\n  Parameters: 1 argument (unspecified type)\n  Purpose: check if argument is a \"Pet\" object\n  Return: true if argument is a Pet, false otherwise\n*/\nexport function isPet(value: unknown):value is Pet{\n  // check if there is no info (value = false) or if info can be accessed\n  if (!value || typeof value !== 'object'){\n    return false\n  }\n  const obj = value as Record<string, unknown>\n  return (\n    typeof obj.title === 'string' &&\n    typeof obj.description === 'string' &&\n    typeof obj.url === 'string' &&\n    typeof obj.created === 'string'\n  )\n}\n\n/*\n  Function: isPetsArray()\n  Parameters: 1 argument (unspecified array)\n  Purpose: check if array is an array of \"Pet\" objects\n  Return: true if argument is a Pet[], false otherwise\n*/\nexport function isPetsArray(value: unknown):value is Pet[]{\n  return Array.isArray(value) && value.every(isPet)\n}\n\n/*\n  Function: getPets()\n  Parameters: none\n  Purpose: retrieve information from JSON file\n  Return: Pet[]\n*/\nexport async function getPets(){\n  // get data using fetch (set to \"GET\" method by default)\n  const request = await fetch('https://eulerity-hackathon.appspot.com/pets')\n  const data = await request.json()\n\n  // check if data consists of Pet objects\n  if (!isPetsArray(data)){\n    throw new Error('Invalid data: array with pets expected')\n  }\n\n  return data\n}\n\n\n\n\nfunction App() {\n  \n  const [pets, setPets] = useState<Pet[]>([]);\n  useEffect(() => {\n      getPets().then(result =>\n        setPets(result)\n      );\n  }, []);\n  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <ul>\n          {pets.map((pet, index) => \n            <ListItem key={index}>{pet.title}</ListItem>\n          )}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}